Rules useless in parser due to conflicts

    8 $@3: /* пусто */


Состояние 2 конфликты: 1 сдвига/вывода
Состояние 178 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: program $end

    1 program: instruction_list

    2 $@1: /* пусто */

    3 instruction_list: instruction_list $@1 instruction

    4 $@2: /* пусто */

    5 instruction_list: instruction_list $@2 label
    6                 | instruction_list '\n'
    7                 | instruction_list macro_definition

    8 $@3: /* пусто */

    9 instruction_list: instruction_list $@3 include_directive
   10                 | /* пусто */

   11 label: IDENTIFIER ':' '\n'
   12      | IDENTIFIER '=' imm '\n'

   13 $@4: /* пусто */

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n'

   15 include_directive: '#' INCLUDE STRING '\n'

   16 parameter_list: /* пусто */
   17               | param_type
   18               | parameter_list ',' param_type

   19 param_type: REG
   20           | REGMEM
   21           | REGMEMIMM
   22           | IMM

   23 instruction: simple_instr '\n'
   24            | macro_instr '\n'
   25            | user_macro '\n'

   26 simple_instr: a_type reg_mem_imm ',' reg ',' dest
   27             | NOT reg_mem_imm ',' dest
   28             | JMP imm
   29             | i_type dest_sp ',' imm ',' dest_sp
   30             | LDI imm ',' dest_sp
   31             | si_type reg_mem_imm ',' imm ',' dest
   32             | jfg_type imm ',' imm
   33             | flg_type imm
   34             | PUSH reg_mem_imm
   35             | POP dest
   36             | SVPC
   37             | RET

   38 macro_instr: MOV reg_mem_imm ',' dest
   39            | jfg_macro imm
   40            | CALL IDENTIFIER
   41            | HALT
   42            | DW imm
   43            | DW STRING

   44 user_macro: '$' IDENTIFIER
   45           | '$' IDENTIFIER reg_mem_imm
   46           | user_macro ',' reg_mem_imm

   47 a_type: ADD
   48       | ADC
   49       | SUB
   50       | SBC
   51       | MUL
   52       | MLL
   53       | SGN
   54       | RAS
   55       | LSH
   56       | RSH
   57       | LRT
   58       | RRT
   59       | AND
   60       | OR
   61       | XOR

   62 i_type: ADDI
   63       | ADCI
   64       | SUBI
   65       | SBCI
   66       | ANDI
   67       | ORI
   68       | XORI

   69 si_type: LSHI
   70        | RSHI
   71        | LRTI
   72        | RRTI

   73 jfg_type: JFC
   74         | JFS

   75 flg_type: FLC
   76         | FLS

   77 jfg_macro: JVC
   78          | JVS
   79          | JNE
   80          | JEQ
   81          | JGE
   82          | JLT
   83          | JCC
   84          | JCS

   85 reg_mem_imm_without_macro_arg: reg_without_macro_arg
   86                              | mem
   87                              | imm_without_macro_arg

   88 reg_mem_imm: reg_mem_imm_without_macro_arg
   89            | '$' DECIMAL

   90 dest_without_macro_arg: reg_without_macro_arg
   91                       | mem
   92                       | '0'

   93 dest: dest_without_macro_arg
   94     | '$' DECIMAL

   95 dest_sp: dest
   96        | SP

   97 reg_without_macro_arg: A
   98                      | B
   99                      | C

  100 reg: reg_without_macro_arg
  101    | '$' DECIMAL

  102 mem: absolute
  103    | addressed
  104    | stack

  105 imm_without_macro_arg: HEX
  106                      | BINARY
  107                      | DECIMAL
  108                      | CHAR
  109                      | '0'
  110                      | IDENTIFIER
  111                      | IDENTIFIER HIGH
  112                      | IDENTIFIER LOW

  113 imm: imm_without_macro_arg
  114    | '$' DECIMAL

  115 absolute: '*' IDENTIFIER

  116 addressed: '*' A

  117 stack: '[' imm ']'


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'\n' (10) 6 11 12 14 15 23 24 25
'#' (35) 14 15
'$' (36) 44 45 89 94 101 114
'*' (42) 115 116
',' (44) 18 26 27 29 30 31 32 38 46
'0' (48) 92 109
':' (58) 11
'=' (61) 12
'[' (91) 14 117
']' (93) 14 117
error (256)
ADD (258) 47
ADC (259) 48
SUB (260) 49
SBC (261) 50
MUL (262) 51
MLL (263) 52
SGN (264) 53
RAS (265) 54
LSH (266) 55
RSH (267) 56
LRT (268) 57
RRT (269) 58
AND (270) 59
OR (271) 60
XOR (272) 61
NOT (273) 27
JMP (274) 28
ADDI (275) 62
ADCI (276) 63
SUBI (277) 64
SBCI (278) 65
ANDI (279) 66
ORI (280) 67
XORI (281) 68
LDI (282) 30
LSHI (283) 69
RSHI (284) 70
LRTI (285) 71
RRTI (286) 72
JFC (287) 73
JFS (288) 74
FLC (289) 75
FLS (290) 76
PUSH (291) 34
POP (292) 35
SVPC (293) 36
RET (294) 37
MOV (295) 38
JVC (296) 77
JVS (297) 78
JNE (298) 79
JEQ (299) 80
JGE (300) 81
JLT (301) 82
JCC (302) 83
JCS (303) 84
CALL (304) 40
HALT (305) 41
DW (306) 42 43
DEFMACRO (307) 14
ENDDEF (308) 14
INCLUDE (309) 15
REG (310) 19
REGMEM (311) 20
REGMEMIMM (312) 21
IMM (313) 22
A (314) 97 116
B (315) 98
C (316) 99
SP (317) 96
HIGH (318) 111
LOW (319) 112
IDENTIFIER (320) 11 12 14 40 44 45 110 111 112 115
STRING (321) 15 43
HEX (322) 105
BINARY (323) 106
DECIMAL (324) 89 94 101 107 114
CHAR (325) 108


Нетерминальные символы с правилами, в которых они появляются

$accept (81)
    налево: 0
program (82)
    налево: 1, направо: 0
instruction_list (83)
    налево: 3 5 6 7 9 10, направо: 1 3 5 6 7 9 14
$@1 (84)
    налево: 2, направо: 3
$@2 (85)
    налево: 4, направо: 5
$@3 (86)
    налево: 8, направо: 9
label (87)
    налево: 11 12, направо: 5
macro_definition (88)
    налево: 14, направо: 7
$@4 (89)
    налево: 13, направо: 14
include_directive (90)
    налево: 15, направо: 9
parameter_list (91)
    налево: 16 17 18, направо: 14 18
param_type (92)
    налево: 19 20 21 22, направо: 17 18
instruction (93)
    налево: 23 24 25, направо: 3
simple_instr (94)
    налево: 26 27 28 29 30 31 32 33 34 35 36 37, направо: 23
macro_instr (95)
    налево: 38 39 40 41 42 43, направо: 24
user_macro (96)
    налево: 44 45 46, направо: 25 46
a_type (97)
    налево: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61, направо:
    26
i_type (98)
    налево: 62 63 64 65 66 67 68, направо: 29
si_type (99)
    налево: 69 70 71 72, направо: 31
jfg_type (100)
    налево: 73 74, направо: 32
flg_type (101)
    налево: 75 76, направо: 33
jfg_macro (102)
    налево: 77 78 79 80 81 82 83 84, направо: 39
reg_mem_imm_without_macro_arg (103)
    налево: 85 86 87, направо: 88
reg_mem_imm (104)
    налево: 88 89, направо: 26 27 31 34 38 45 46
dest_without_macro_arg (105)
    налево: 90 91 92, направо: 93
dest (106)
    налево: 93 94, направо: 26 27 31 35 38 95
dest_sp (107)
    налево: 95 96, направо: 29 30
reg_without_macro_arg (108)
    налево: 97 98 99, направо: 85 90 100
reg (109)
    налево: 100 101, направо: 26
mem (110)
    налево: 102 103 104, направо: 86 91
imm_without_macro_arg (111)
    налево: 105 106 107 108 109 110 111 112, направо: 87 113
imm (112)
    налево: 113 114, направо: 12 28 29 30 31 32 33 39 42 117
absolute (113)
    налево: 115, направо: 102
addressed (114)
    налево: 116, направо: 103
stack (115)
    налево: 117, направо: 104


состояние 0

    0 $accept: . program $end

    $default  вывод с использованием правила 10 (instruction_list)

    program           переход в состояние 1
    instruction_list  переход в состояние 2


состояние 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


состояние 2

    1 program: instruction_list .
    3 instruction_list: instruction_list . $@1 instruction
    5                 | instruction_list . $@2 label
    6                 | instruction_list . '\n'
    7                 | instruction_list . macro_definition
    9                 | instruction_list . $@3 include_directive

    '\n'  сдвиг, и переход в состояние 4
    '#'   сдвиг, и переход в состояние 5

    $end        вывод с использованием правила 1 (program)
    IDENTIFIER  вывод с использованием правила 4 ($@2)
    '#'         [вывод с использованием правила 8 ($@3)]
    $default    вывод с использованием правила 2 ($@1)

    $@1               переход в состояние 6
    $@2               переход в состояние 7
    $@3               переход в состояние 8
    macro_definition  переход в состояние 9


состояние 3

    0 $accept: program $end .

    $default  accept


состояние 4

    6 instruction_list: instruction_list '\n' .

    $default  вывод с использованием правила 6 (instruction_list)


состояние 5

   14 macro_definition: '#' . DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n'

    DEFMACRO  сдвиг, и переход в состояние 10


состояние 6

    3 instruction_list: instruction_list $@1 . instruction

    ADD   сдвиг, и переход в состояние 11
    ADC   сдвиг, и переход в состояние 12
    SUB   сдвиг, и переход в состояние 13
    SBC   сдвиг, и переход в состояние 14
    MUL   сдвиг, и переход в состояние 15
    MLL   сдвиг, и переход в состояние 16
    SGN   сдвиг, и переход в состояние 17
    RAS   сдвиг, и переход в состояние 18
    LSH   сдвиг, и переход в состояние 19
    RSH   сдвиг, и переход в состояние 20
    LRT   сдвиг, и переход в состояние 21
    RRT   сдвиг, и переход в состояние 22
    AND   сдвиг, и переход в состояние 23
    OR    сдвиг, и переход в состояние 24
    XOR   сдвиг, и переход в состояние 25
    NOT   сдвиг, и переход в состояние 26
    JMP   сдвиг, и переход в состояние 27
    ADDI  сдвиг, и переход в состояние 28
    ADCI  сдвиг, и переход в состояние 29
    SUBI  сдвиг, и переход в состояние 30
    SBCI  сдвиг, и переход в состояние 31
    ANDI  сдвиг, и переход в состояние 32
    ORI   сдвиг, и переход в состояние 33
    XORI  сдвиг, и переход в состояние 34
    LDI   сдвиг, и переход в состояние 35
    LSHI  сдвиг, и переход в состояние 36
    RSHI  сдвиг, и переход в состояние 37
    LRTI  сдвиг, и переход в состояние 38
    RRTI  сдвиг, и переход в состояние 39
    JFC   сдвиг, и переход в состояние 40
    JFS   сдвиг, и переход в состояние 41
    FLC   сдвиг, и переход в состояние 42
    FLS   сдвиг, и переход в состояние 43
    PUSH  сдвиг, и переход в состояние 44
    POP   сдвиг, и переход в состояние 45
    SVPC  сдвиг, и переход в состояние 46
    RET   сдвиг, и переход в состояние 47
    MOV   сдвиг, и переход в состояние 48
    JVC   сдвиг, и переход в состояние 49
    JVS   сдвиг, и переход в состояние 50
    JNE   сдвиг, и переход в состояние 51
    JEQ   сдвиг, и переход в состояние 52
    JGE   сдвиг, и переход в состояние 53
    JLT   сдвиг, и переход в состояние 54
    JCC   сдвиг, и переход в состояние 55
    JCS   сдвиг, и переход в состояние 56
    CALL  сдвиг, и переход в состояние 57
    HALT  сдвиг, и переход в состояние 58
    DW    сдвиг, и переход в состояние 59
    '$'   сдвиг, и переход в состояние 60

    instruction   переход в состояние 61
    simple_instr  переход в состояние 62
    macro_instr   переход в состояние 63
    user_macro    переход в состояние 64
    a_type        переход в состояние 65
    i_type        переход в состояние 66
    si_type       переход в состояние 67
    jfg_type      переход в состояние 68
    flg_type      переход в состояние 69
    jfg_macro     переход в состояние 70


состояние 7

    5 instruction_list: instruction_list $@2 . label

    IDENTIFIER  сдвиг, и переход в состояние 71

    label  переход в состояние 72


состояние 8

    9 instruction_list: instruction_list $@3 . include_directive

    '#'  сдвиг, и переход в состояние 73

    include_directive  переход в состояние 74


состояние 9

    7 instruction_list: instruction_list macro_definition .

    $default  вывод с использованием правила 7 (instruction_list)


состояние 10

   14 macro_definition: '#' DEFMACRO . IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n'

    IDENTIFIER  сдвиг, и переход в состояние 75


состояние 11

   47 a_type: ADD .

    $default  вывод с использованием правила 47 (a_type)


состояние 12

   48 a_type: ADC .

    $default  вывод с использованием правила 48 (a_type)


состояние 13

   49 a_type: SUB .

    $default  вывод с использованием правила 49 (a_type)


состояние 14

   50 a_type: SBC .

    $default  вывод с использованием правила 50 (a_type)


состояние 15

   51 a_type: MUL .

    $default  вывод с использованием правила 51 (a_type)


состояние 16

   52 a_type: MLL .

    $default  вывод с использованием правила 52 (a_type)


состояние 17

   53 a_type: SGN .

    $default  вывод с использованием правила 53 (a_type)


состояние 18

   54 a_type: RAS .

    $default  вывод с использованием правила 54 (a_type)


состояние 19

   55 a_type: LSH .

    $default  вывод с использованием правила 55 (a_type)


состояние 20

   56 a_type: RSH .

    $default  вывод с использованием правила 56 (a_type)


состояние 21

   57 a_type: LRT .

    $default  вывод с использованием правила 57 (a_type)


состояние 22

   58 a_type: RRT .

    $default  вывод с использованием правила 58 (a_type)


состояние 23

   59 a_type: AND .

    $default  вывод с использованием правила 59 (a_type)


состояние 24

   60 a_type: OR .

    $default  вывод с использованием правила 60 (a_type)


состояние 25

   61 a_type: XOR .

    $default  вывод с использованием правила 61 (a_type)


состояние 26

   27 simple_instr: NOT . reg_mem_imm ',' dest

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 89
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 27

   28 simple_instr: JMP . imm

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 98


состояние 28

   62 i_type: ADDI .

    $default  вывод с использованием правила 62 (i_type)


состояние 29

   63 i_type: ADCI .

    $default  вывод с использованием правила 63 (i_type)


состояние 30

   64 i_type: SUBI .

    $default  вывод с использованием правила 64 (i_type)


состояние 31

   65 i_type: SBCI .

    $default  вывод с использованием правила 65 (i_type)


состояние 32

   66 i_type: ANDI .

    $default  вывод с использованием правила 66 (i_type)


состояние 33

   67 i_type: ORI .

    $default  вывод с использованием правила 67 (i_type)


состояние 34

   68 i_type: XORI .

    $default  вывод с использованием правила 68 (i_type)


состояние 35

   30 simple_instr: LDI . imm ',' dest_sp

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 99


состояние 36

   69 si_type: LSHI .

    $default  вывод с использованием правила 69 (si_type)


состояние 37

   70 si_type: RSHI .

    $default  вывод с использованием правила 70 (si_type)


состояние 38

   71 si_type: LRTI .

    $default  вывод с использованием правила 71 (si_type)


состояние 39

   72 si_type: RRTI .

    $default  вывод с использованием правила 72 (si_type)


состояние 40

   73 jfg_type: JFC .

    $default  вывод с использованием правила 73 (jfg_type)


состояние 41

   74 jfg_type: JFS .

    $default  вывод с использованием правила 74 (jfg_type)


состояние 42

   75 flg_type: FLC .

    $default  вывод с использованием правила 75 (flg_type)


состояние 43

   76 flg_type: FLS .

    $default  вывод с использованием правила 76 (flg_type)


состояние 44

   34 simple_instr: PUSH . reg_mem_imm

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 100
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 45

   35 simple_instr: POP . dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 104
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 46

   36 simple_instr: SVPC .

    $default  вывод с использованием правила 36 (simple_instr)


состояние 47

   37 simple_instr: RET .

    $default  вывод с использованием правила 37 (simple_instr)


состояние 48

   38 macro_instr: MOV . reg_mem_imm ',' dest

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 107
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 49

   77 jfg_macro: JVC .

    $default  вывод с использованием правила 77 (jfg_macro)


состояние 50

   78 jfg_macro: JVS .

    $default  вывод с использованием правила 78 (jfg_macro)


состояние 51

   79 jfg_macro: JNE .

    $default  вывод с использованием правила 79 (jfg_macro)


состояние 52

   80 jfg_macro: JEQ .

    $default  вывод с использованием правила 80 (jfg_macro)


состояние 53

   81 jfg_macro: JGE .

    $default  вывод с использованием правила 81 (jfg_macro)


состояние 54

   82 jfg_macro: JLT .

    $default  вывод с использованием правила 82 (jfg_macro)


состояние 55

   83 jfg_macro: JCC .

    $default  вывод с использованием правила 83 (jfg_macro)


состояние 56

   84 jfg_macro: JCS .

    $default  вывод с использованием правила 84 (jfg_macro)


состояние 57

   40 macro_instr: CALL . IDENTIFIER

    IDENTIFIER  сдвиг, и переход в состояние 108


состояние 58

   41 macro_instr: HALT .

    $default  вывод с использованием правила 41 (macro_instr)


состояние 59

   42 macro_instr: DW . imm
   43            | DW . STRING

    IDENTIFIER  сдвиг, и переход в состояние 79
    STRING      сдвиг, и переход в состояние 109
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 110


состояние 60

   44 user_macro: '$' . IDENTIFIER
   45           | '$' . IDENTIFIER reg_mem_imm

    IDENTIFIER  сдвиг, и переход в состояние 111


состояние 61

    3 instruction_list: instruction_list $@1 instruction .

    $default  вывод с использованием правила 3 (instruction_list)


состояние 62

   23 instruction: simple_instr . '\n'

    '\n'  сдвиг, и переход в состояние 112


состояние 63

   24 instruction: macro_instr . '\n'

    '\n'  сдвиг, и переход в состояние 113


состояние 64

   25 instruction: user_macro . '\n'
   46 user_macro: user_macro . ',' reg_mem_imm

    '\n'  сдвиг, и переход в состояние 114
    ','   сдвиг, и переход в состояние 115


состояние 65

   26 simple_instr: a_type . reg_mem_imm ',' reg ',' dest

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 116
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 66

   29 simple_instr: i_type . dest_sp ',' imm ',' dest_sp

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    SP   сдвиг, и переход в состояние 117
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 118
    dest_sp                 переход в состояние 119
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 67

   31 simple_instr: si_type . reg_mem_imm ',' imm ',' dest

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 120
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 68

   32 simple_instr: jfg_type . imm ',' imm

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 121


состояние 69

   33 simple_instr: flg_type . imm

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 122


состояние 70

   39 macro_instr: jfg_macro . imm

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 123


состояние 71

   11 label: IDENTIFIER . ':' '\n'
   12      | IDENTIFIER . '=' imm '\n'

    ':'  сдвиг, и переход в состояние 124
    '='  сдвиг, и переход в состояние 125


состояние 72

    5 instruction_list: instruction_list $@2 label .

    $default  вывод с использованием правила 5 (instruction_list)


состояние 73

   15 include_directive: '#' . INCLUDE STRING '\n'

    INCLUDE  сдвиг, и переход в состояние 126


состояние 74

    9 instruction_list: instruction_list $@3 include_directive .

    $default  вывод с использованием правила 9 (instruction_list)


состояние 75

   14 macro_definition: '#' DEFMACRO IDENTIFIER . '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n'

    '['  сдвиг, и переход в состояние 127


состояние 76

   97 reg_without_macro_arg: A .

    $default  вывод с использованием правила 97 (reg_without_macro_arg)


состояние 77

   98 reg_without_macro_arg: B .

    $default  вывод с использованием правила 98 (reg_without_macro_arg)


состояние 78

   99 reg_without_macro_arg: C .

    $default  вывод с использованием правила 99 (reg_without_macro_arg)


состояние 79

  110 imm_without_macro_arg: IDENTIFIER .
  111                      | IDENTIFIER . HIGH
  112                      | IDENTIFIER . LOW

    HIGH  сдвиг, и переход в состояние 128
    LOW   сдвиг, и переход в состояние 129

    $default  вывод с использованием правила 110 (imm_without_macro_arg)


состояние 80

  105 imm_without_macro_arg: HEX .

    $default  вывод с использованием правила 105 (imm_without_macro_arg)


состояние 81

  106 imm_without_macro_arg: BINARY .

    $default  вывод с использованием правила 106 (imm_without_macro_arg)


состояние 82

  107 imm_without_macro_arg: DECIMAL .

    $default  вывод с использованием правила 107 (imm_without_macro_arg)


состояние 83

  108 imm_without_macro_arg: CHAR .

    $default  вывод с использованием правила 108 (imm_without_macro_arg)


состояние 84

  117 stack: '[' . imm ']'

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 130


состояние 85

   89 reg_mem_imm: '$' . DECIMAL

    DECIMAL  сдвиг, и переход в состояние 131


состояние 86

  109 imm_without_macro_arg: '0' .

    $default  вывод с использованием правила 109 (imm_without_macro_arg)


состояние 87

  115 absolute: '*' . IDENTIFIER
  116 addressed: '*' . A

    A           сдвиг, и переход в состояние 132
    IDENTIFIER  сдвиг, и переход в состояние 133


состояние 88

   88 reg_mem_imm: reg_mem_imm_without_macro_arg .

    $default  вывод с использованием правила 88 (reg_mem_imm)


состояние 89

   27 simple_instr: NOT reg_mem_imm . ',' dest

    ','  сдвиг, и переход в состояние 134


состояние 90

   85 reg_mem_imm_without_macro_arg: reg_without_macro_arg .

    $default  вывод с использованием правила 85 (reg_mem_imm_without_macro_arg)


состояние 91

   86 reg_mem_imm_without_macro_arg: mem .

    $default  вывод с использованием правила 86 (reg_mem_imm_without_macro_arg)


состояние 92

   87 reg_mem_imm_without_macro_arg: imm_without_macro_arg .

    $default  вывод с использованием правила 87 (reg_mem_imm_without_macro_arg)


состояние 93

  102 mem: absolute .

    $default  вывод с использованием правила 102 (mem)


состояние 94

  103 mem: addressed .

    $default  вывод с использованием правила 103 (mem)


состояние 95

  104 mem: stack .

    $default  вывод с использованием правила 104 (mem)


состояние 96

  114 imm: '$' . DECIMAL

    DECIMAL  сдвиг, и переход в состояние 135


состояние 97

  113 imm: imm_without_macro_arg .

    $default  вывод с использованием правила 113 (imm)


состояние 98

   28 simple_instr: JMP imm .

    $default  вывод с использованием правила 28 (simple_instr)


состояние 99

   30 simple_instr: LDI imm . ',' dest_sp

    ','  сдвиг, и переход в состояние 136


состояние 100

   34 simple_instr: PUSH reg_mem_imm .

    $default  вывод с использованием правила 34 (simple_instr)


состояние 101

   94 dest: '$' . DECIMAL

    DECIMAL  сдвиг, и переход в состояние 137


состояние 102

   92 dest_without_macro_arg: '0' .

    $default  вывод с использованием правила 92 (dest_without_macro_arg)


состояние 103

   93 dest: dest_without_macro_arg .

    $default  вывод с использованием правила 93 (dest)


состояние 104

   35 simple_instr: POP dest .

    $default  вывод с использованием правила 35 (simple_instr)


состояние 105

   90 dest_without_macro_arg: reg_without_macro_arg .

    $default  вывод с использованием правила 90 (dest_without_macro_arg)


состояние 106

   91 dest_without_macro_arg: mem .

    $default  вывод с использованием правила 91 (dest_without_macro_arg)


состояние 107

   38 macro_instr: MOV reg_mem_imm . ',' dest

    ','  сдвиг, и переход в состояние 138


состояние 108

   40 macro_instr: CALL IDENTIFIER .

    $default  вывод с использованием правила 40 (macro_instr)


состояние 109

   43 macro_instr: DW STRING .

    $default  вывод с использованием правила 43 (macro_instr)


состояние 110

   42 macro_instr: DW imm .

    $default  вывод с использованием правила 42 (macro_instr)


состояние 111

   44 user_macro: '$' IDENTIFIER .
   45           | '$' IDENTIFIER . reg_mem_imm

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    $default  вывод с использованием правила 44 (user_macro)

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 139
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 112

   23 instruction: simple_instr '\n' .

    $default  вывод с использованием правила 23 (instruction)


состояние 113

   24 instruction: macro_instr '\n' .

    $default  вывод с использованием правила 24 (instruction)


состояние 114

   25 instruction: user_macro '\n' .

    $default  вывод с использованием правила 25 (instruction)


состояние 115

   46 user_macro: user_macro ',' . reg_mem_imm

    A           сдвиг, и переход в состояние 76
    B           сдвиг, и переход в состояние 77
    C           сдвиг, и переход в состояние 78
    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '['         сдвиг, и переход в состояние 84
    '$'         сдвиг, и переход в состояние 85
    '0'         сдвиг, и переход в состояние 86
    '*'         сдвиг, и переход в состояние 87

    reg_mem_imm_without_macro_arg  переход в состояние 88
    reg_mem_imm                    переход в состояние 140
    reg_without_macro_arg          переход в состояние 90
    mem                            переход в состояние 91
    imm_without_macro_arg          переход в состояние 92
    absolute                       переход в состояние 93
    addressed                      переход в состояние 94
    stack                          переход в состояние 95


состояние 116

   26 simple_instr: a_type reg_mem_imm . ',' reg ',' dest

    ','  сдвиг, и переход в состояние 141


состояние 117

   96 dest_sp: SP .

    $default  вывод с использованием правила 96 (dest_sp)


состояние 118

   95 dest_sp: dest .

    $default  вывод с использованием правила 95 (dest_sp)


состояние 119

   29 simple_instr: i_type dest_sp . ',' imm ',' dest_sp

    ','  сдвиг, и переход в состояние 142


состояние 120

   31 simple_instr: si_type reg_mem_imm . ',' imm ',' dest

    ','  сдвиг, и переход в состояние 143


состояние 121

   32 simple_instr: jfg_type imm . ',' imm

    ','  сдвиг, и переход в состояние 144


состояние 122

   33 simple_instr: flg_type imm .

    $default  вывод с использованием правила 33 (simple_instr)


состояние 123

   39 macro_instr: jfg_macro imm .

    $default  вывод с использованием правила 39 (macro_instr)


состояние 124

   11 label: IDENTIFIER ':' . '\n'

    '\n'  сдвиг, и переход в состояние 145


состояние 125

   12 label: IDENTIFIER '=' . imm '\n'

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 146


состояние 126

   15 include_directive: '#' INCLUDE . STRING '\n'

    STRING  сдвиг, и переход в состояние 147


состояние 127

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' . parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n'

    REG        сдвиг, и переход в состояние 148
    REGMEM     сдвиг, и переход в состояние 149
    REGMEMIMM  сдвиг, и переход в состояние 150
    IMM        сдвиг, и переход в состояние 151

    $default  вывод с использованием правила 16 (parameter_list)

    parameter_list  переход в состояние 152
    param_type      переход в состояние 153


состояние 128

  111 imm_without_macro_arg: IDENTIFIER HIGH .

    $default  вывод с использованием правила 111 (imm_without_macro_arg)


состояние 129

  112 imm_without_macro_arg: IDENTIFIER LOW .

    $default  вывод с использованием правила 112 (imm_without_macro_arg)


состояние 130

  117 stack: '[' imm . ']'

    ']'  сдвиг, и переход в состояние 154


состояние 131

   89 reg_mem_imm: '$' DECIMAL .

    $default  вывод с использованием правила 89 (reg_mem_imm)


состояние 132

  116 addressed: '*' A .

    $default  вывод с использованием правила 116 (addressed)


состояние 133

  115 absolute: '*' IDENTIFIER .

    $default  вывод с использованием правила 115 (absolute)


состояние 134

   27 simple_instr: NOT reg_mem_imm ',' . dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 155
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 135

  114 imm: '$' DECIMAL .

    $default  вывод с использованием правила 114 (imm)


состояние 136

   30 simple_instr: LDI imm ',' . dest_sp

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    SP   сдвиг, и переход в состояние 117
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 118
    dest_sp                 переход в состояние 156
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 137

   94 dest: '$' DECIMAL .

    $default  вывод с использованием правила 94 (dest)


состояние 138

   38 macro_instr: MOV reg_mem_imm ',' . dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 157
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 139

   45 user_macro: '$' IDENTIFIER reg_mem_imm .

    $default  вывод с использованием правила 45 (user_macro)


состояние 140

   46 user_macro: user_macro ',' reg_mem_imm .

    $default  вывод с использованием правила 46 (user_macro)


состояние 141

   26 simple_instr: a_type reg_mem_imm ',' . reg ',' dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '$'  сдвиг, и переход в состояние 158

    reg_without_macro_arg  переход в состояние 159
    reg                    переход в состояние 160


состояние 142

   29 simple_instr: i_type dest_sp ',' . imm ',' dest_sp

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 161


состояние 143

   31 simple_instr: si_type reg_mem_imm ',' . imm ',' dest

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 162


состояние 144

   32 simple_instr: jfg_type imm ',' . imm

    IDENTIFIER  сдвиг, и переход в состояние 79
    HEX         сдвиг, и переход в состояние 80
    BINARY      сдвиг, и переход в состояние 81
    DECIMAL     сдвиг, и переход в состояние 82
    CHAR        сдвиг, и переход в состояние 83
    '$'         сдвиг, и переход в состояние 96
    '0'         сдвиг, и переход в состояние 86

    imm_without_macro_arg  переход в состояние 97
    imm                    переход в состояние 163


состояние 145

   11 label: IDENTIFIER ':' '\n' .

    $default  вывод с использованием правила 11 (label)


состояние 146

   12 label: IDENTIFIER '=' imm . '\n'

    '\n'  сдвиг, и переход в состояние 164


состояние 147

   15 include_directive: '#' INCLUDE STRING . '\n'

    '\n'  сдвиг, и переход в состояние 165


состояние 148

   19 param_type: REG .

    $default  вывод с использованием правила 19 (param_type)


состояние 149

   20 param_type: REGMEM .

    $default  вывод с использованием правила 20 (param_type)


состояние 150

   21 param_type: REGMEMIMM .

    $default  вывод с использованием правила 21 (param_type)


состояние 151

   22 param_type: IMM .

    $default  вывод с использованием правила 22 (param_type)


состояние 152

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list . ']' '\n' $@4 instruction_list ENDDEF '\n'
   18 parameter_list: parameter_list . ',' param_type

    ']'  сдвиг, и переход в состояние 166
    ','  сдвиг, и переход в состояние 167


состояние 153

   17 parameter_list: param_type .

    $default  вывод с использованием правила 17 (parameter_list)


состояние 154

  117 stack: '[' imm ']' .

    $default  вывод с использованием правила 117 (stack)


состояние 155

   27 simple_instr: NOT reg_mem_imm ',' dest .

    $default  вывод с использованием правила 27 (simple_instr)


состояние 156

   30 simple_instr: LDI imm ',' dest_sp .

    $default  вывод с использованием правила 30 (simple_instr)


состояние 157

   38 macro_instr: MOV reg_mem_imm ',' dest .

    $default  вывод с использованием правила 38 (macro_instr)


состояние 158

  101 reg: '$' . DECIMAL

    DECIMAL  сдвиг, и переход в состояние 168


состояние 159

  100 reg: reg_without_macro_arg .

    $default  вывод с использованием правила 100 (reg)


состояние 160

   26 simple_instr: a_type reg_mem_imm ',' reg . ',' dest

    ','  сдвиг, и переход в состояние 169


состояние 161

   29 simple_instr: i_type dest_sp ',' imm . ',' dest_sp

    ','  сдвиг, и переход в состояние 170


состояние 162

   31 simple_instr: si_type reg_mem_imm ',' imm . ',' dest

    ','  сдвиг, и переход в состояние 171


состояние 163

   32 simple_instr: jfg_type imm ',' imm .

    $default  вывод с использованием правила 32 (simple_instr)


состояние 164

   12 label: IDENTIFIER '=' imm '\n' .

    $default  вывод с использованием правила 12 (label)


состояние 165

   15 include_directive: '#' INCLUDE STRING '\n' .

    $default  вывод с использованием правила 15 (include_directive)


состояние 166

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' . '\n' $@4 instruction_list ENDDEF '\n'

    '\n'  сдвиг, и переход в состояние 172


состояние 167

   18 parameter_list: parameter_list ',' . param_type

    REG        сдвиг, и переход в состояние 148
    REGMEM     сдвиг, и переход в состояние 149
    REGMEMIMM  сдвиг, и переход в состояние 150
    IMM        сдвиг, и переход в состояние 151

    param_type  переход в состояние 173


состояние 168

  101 reg: '$' DECIMAL .

    $default  вывод с использованием правила 101 (reg)


состояние 169

   26 simple_instr: a_type reg_mem_imm ',' reg ',' . dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 174
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 170

   29 simple_instr: i_type dest_sp ',' imm ',' . dest_sp

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    SP   сдвиг, и переход в состояние 117
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 118
    dest_sp                 переход в состояние 175
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 171

   31 simple_instr: si_type reg_mem_imm ',' imm ',' . dest

    A    сдвиг, и переход в состояние 76
    B    сдвиг, и переход в состояние 77
    C    сдвиг, и переход в состояние 78
    '['  сдвиг, и переход в состояние 84
    '$'  сдвиг, и переход в состояние 101
    '0'  сдвиг, и переход в состояние 102
    '*'  сдвиг, и переход в состояние 87

    dest_without_macro_arg  переход в состояние 103
    dest                    переход в состояние 176
    reg_without_macro_arg   переход в состояние 105
    mem                     переход в состояние 106
    absolute                переход в состояние 93
    addressed               переход в состояние 94
    stack                   переход в состояние 95


состояние 172

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' . $@4 instruction_list ENDDEF '\n'

    $default  вывод с использованием правила 13 ($@4)

    $@4  переход в состояние 177


состояние 173

   18 parameter_list: parameter_list ',' param_type .

    $default  вывод с использованием правила 18 (parameter_list)


состояние 174

   26 simple_instr: a_type reg_mem_imm ',' reg ',' dest .

    $default  вывод с использованием правила 26 (simple_instr)


состояние 175

   29 simple_instr: i_type dest_sp ',' imm ',' dest_sp .

    $default  вывод с использованием правила 29 (simple_instr)


состояние 176

   31 simple_instr: si_type reg_mem_imm ',' imm ',' dest .

    $default  вывод с использованием правила 31 (simple_instr)


состояние 177

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 . instruction_list ENDDEF '\n'

    $default  вывод с использованием правила 10 (instruction_list)

    instruction_list  переход в состояние 178


состояние 178

    3 instruction_list: instruction_list . $@1 instruction
    5                 | instruction_list . $@2 label
    6                 | instruction_list . '\n'
    7                 | instruction_list . macro_definition
    9                 | instruction_list . $@3 include_directive
   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list . ENDDEF '\n'

    ENDDEF  сдвиг, и переход в состояние 179
    '\n'    сдвиг, и переход в состояние 4
    '#'     сдвиг, и переход в состояние 5

    IDENTIFIER  вывод с использованием правила 4 ($@2)
    '#'         [вывод с использованием правила 8 ($@3)]
    $default    вывод с использованием правила 2 ($@1)

    $@1               переход в состояние 6
    $@2               переход в состояние 7
    $@3               переход в состояние 8
    macro_definition  переход в состояние 9


состояние 179

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF . '\n'

    '\n'  сдвиг, и переход в состояние 180


состояние 180

   14 macro_definition: '#' DEFMACRO IDENTIFIER '[' parameter_list ']' '\n' $@4 instruction_list ENDDEF '\n' .

    $default  вывод с использованием правила 14 (macro_definition)
